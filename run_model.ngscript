{
  "nbformat": 4,
  "nbformat_minor": 5,
  "metadata": {
    "kernelspec": {
      "display_name": "IJulia 1.9.3",
      "language": "julia",
      "name": "ijulia-1.9"
    },
    "language_info": {
      "file_extension": ".jl",
      "name": "julia",
      "version": "1.9.3"
    },
    "engee": {}
  },
  "cells": [
    {
      "id": "c2d91a1a",
      "cell_type": "code",
      "source": [
        "using HTTP\r\nusing JSON\r\n\r\nurl = \"https://ngw.devices.sberbank.ru:9443/api/v2/oauth\"\r\n\r\nheaders = [\r\n  \"Content-Type\" => \"application/x-www-form-urlencoded\",\r\n  \"Accept\"=> \"application/json\",\r\n  \"RqUID\"=> \"2080266b-b3e5-4bbb-bf63-efb5cb5fb6c9\",\r\n  \"Authorization\"=> \"Basic <TOKEN>\"\r\n]\r\n\r\nrequest = HTTP.request(\r\n    \"POST\", \r\n    url,\r\n    headers,\r\n    \"scope=GIGACHAT_API_PERS\",\r\n    require_ssl_verification=false\r\n)\r\ntoken_text = String(request.body)\r\naccess_token = JSON.parse(token_text)[\"access_token\"]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": "\"eyJjdHkiOiJqd3QiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.mRpnRBbIm13jkAffnF1oFtCC3C4doqqzUoanoTLYRrLiNtaUcx7Ignj8INLAQ_WjqzayJDZ0YLzD0hBFMJDumA6nRgVXJpccmuewoT9VnHxQ14zt2Au5Q9wMsbBarD-3LHShtsQEyqJl5mW9iYbvk6-yiqmGlgNgUbum77ZJDffMZnMDSP1f9Y7n1b2oBUdRE6F\"\u001b[93m\u001b[1m ⋯ 692 bytes ⋯ \u001b[22m\u001b[39m\"6FGpej2_a_l4-sQTsF01mT3Iin0oF8MuZ4zbfU_afG5sp5njDo5-Jr6PQ2rrFXkyCOk3IMlJuEblJ1MpAVOhzIx10gJgPcEGy4a2W9C3sYo2jFLMOGaHHc9biR4ctkw6kl-DgT8EEs3d62wvTtzvNoPYf0ZOrSY3mrcBBNsIHBqwqm0uJ-2qICMroPMo-Te7UGzpE0BWExAwn7Nf2ZmGzNFPlg9YpGGlXw.qA9hlGbdgjBva-9e0ImTtd4xqQglDyDCDqguZ2NpvoI\""
          },
          "metadata": {},
          "execution_count": 53
        }
      ],
      "metadata": {
        "name": "Название секции",
        "engee": {
          "isDisplay": true,
          "isParagraph": false,
          "isClosedParagraph": false,
          "amountHideCellsInside": 0,
          "codeOutputView": "col",
          "codeOutputHidden": false,
          "outputInfo": {
            "isExpanded": false,
            "scrollTop": 22.399999618530273
          },
          "maskInfo": {
            "isMaskVisible": true,
            "isEditorVisible": true,
            "isAutoplayActive": false
          }
        }
      }
    },
    {
      "id": "2e819e35",
      "cell_type": "code",
      "source": [
        "add_content = raw\"\"\"\r\nПекарня продает два вида тортов. Они продают шоколадный торт и ванильный торт. Пусть они делают x1 шоколадных тортов с прибылью в $10 каждый, и x2 ванильных тортов с прибылью $11 каждый (x1 и x2 это неизвестные и оба больше или равны 0). Ежедневный спрос на эти торты составляет максимум 50 шоколадных тортов  и максимум 30 ванильных тортов. В пекарне не хватает работников, поэтому в пекарне могут сделать максимум 50 тортов любого вида за день. Сколько тортов каждого вида необходимо делать пекарне, чтобы максимизировать их прибыль?\r\n\"\"\"\r\n\r\nbase_content = raw\"\"\"Сформулируй структурированную задачу линейного программирования.\r\nРезультат представь строго согласно примеру, где опишешь [полные названия переменных, взятые из описания задачи], [являются ли переменные Real или Integer], [параметры целевой функции и направление оптимизации (Maximize или Minimize)] и все линейные ограничения. Результаты с квадратными скобками должны быть последними строками вашего ответа и идти вместе, не разделенные текстом. Не указывай условия неотрицательности.\r\nЕсли ты записываешь условия отношений, то если переменная “y” составляет как минимум 10% от общей суммы значений, то она выражается “y>=0.1*(x + y + z)”, далее раскрывая скобки “y>=0.1*x+0.1*y+0.1*z”, далее “-0.1*x+0.9*y-0.1*z>=0”, в итоге выражение равно [-0.1, 0.9, -0.1, >=, 0].\r\nВ результате, при описании выражений, используются только коэффициенты переменных. Выражение “x1+3*x2<=6” будет записываться как [1, 3, <=, 6]. Записывать [x1, 3*x3, <=, 6] запрещается. \r\nПисать что-то кроме выражений в квадратных скобках запрещается. Сразу напиши результат.\r\nПример задачи 4:\r\nКомпания хочет рекламировать свой продукт. Они хотят использовать три типа рекламы: рекламу в журналах, листовки и рекламные щиты. Стоимость каждого варианта вместе с ожидаемым количеством просмотров известна. Реклама в журнале стоит $1000 и привлекает 10000 зрителей. Рекламная листовка стоит $200 и привлекает 5000 зрителей. Рекламный щит стоит $7000 и привлекает 25000 зрителей. Чтобы не раздражать клиентов, годов ограничил количество листовок от одной компании до 8 штук. Кроме не более трети всей рекламы должно быть рекламными щитами, и минимум 15% рекламны должно быть рекламой в журнале. Если недельный бюджет составляет $50000, сколько рекламы каждого типа следует запустить для максимизации количества зрителей?\r\nПример результатов задачи 4:\r\n[Реклама в журнале, Листовки, Рекламные щиты]\r\n[Integer, Integer, Integer] [10000, 5000, 25000, Maximize] [1000, 200, 7000, <=, 50000] [0, 1, 0, <=, 8] [-1, -1, 2, <=, 0] [17, -3, -3, >=, 0]\r\nПример задачи 2:\r\nМагазин мебели закупает и продает только обеденные столы и стулья. Доход за обеденный стол составляет $350 и доход за стул составляет $75. Доступно 500 квадратных футов пространства, обеденный стол занимает 8 квадратных футов, а стул занимает 2 квадратных фута. Так как стулья продаются чаще, то по крайней мере 70% всей мебели в магазине должны составлять стулья. В плане капитала, обеденные столы составляют $1000 капитала, а стулья составляют $150 капитала. Компания хочет, чтобы мебель всегда составляла максимум $20000 капитала. Сформулируйте ЛП для максимизации дохода.\r\nПример результатов задачи 2:\r\n[Обеденные столы, Стулья] [Real, Real] [350, 75, Maximize] [8, 2, <=, 500] [1000, 150, <=, 20000] [-0.7, 0.3, >=, 0]\r\nЗадача, которую нужно структурировать:\r\n\"\"\"\r\n\r\ncontent = base_content * add_content;"
      ],
      "execution_count": 0,
      "outputs": [],
      "metadata": {
        "name": "Название секции",
        "engee": {
          "isDisplay": true,
          "isParagraph": false,
          "isClosedParagraph": false,
          "amountHideCellsInside": 0,
          "codeOutputView": "col",
          "codeOutputHidden": false,
          "outputInfo": {
            "isExpanded": false,
            "scrollTop": 0
          },
          "maskInfo": {
            "isMaskVisible": true,
            "isEditorVisible": true,
            "isAutoplayActive": false
          }
        }
      }
    },
    {
      "id": "7b08aefd",
      "cell_type": "code",
      "source": [
        "url = \"https://gigachat.devices.sberbank.ru/api/v1/chat/completions\"\r\n\r\ndata = Dict([\r\n    \"model\" => \"GigaChat\",\r\n    \"messages\" => [\r\n        Dict([\r\n            \"role\" => \"user\",\r\n            \"content\" => content,\r\n        ])\r\n    ],\r\n    \"stream\" => false,\r\n    \"repetition_penalty\" => 1,\r\n])\r\npayload = JSON.json(data)\r\n\r\nheaders = Dict([\r\n  \"Content-Type\" => \"application/json\",\r\n  \"Accept\" => \"application/json\",\r\n  \"Authorization\"=> \"Bearer $access_token\"\r\n])\r\n\r\nrequest = HTTP.request(\r\n    \"POST\", \r\n    url,\r\n    headers,\r\n    payload,\r\n    require_ssl_verification=false\r\n)\r\n\r\nmodel_response = String(request.body)\r\nproblem = JSON.parse(model_response)[\"choices\"][1][\"message\"][\"content\"]\r\nprint(problem)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "[x1, x2] [Real, Real] [10, 11, Maximize] [1, 0, <=, 50] [0, 1, <=, 30] [1, 1, <=, 50]"
        }
      ],
      "metadata": {
        "name": "Название секции",
        "engee": {
          "isDisplay": true,
          "isParagraph": false,
          "isClosedParagraph": false,
          "amountHideCellsInside": 0,
          "codeOutputView": "col",
          "codeOutputHidden": false,
          "outputInfo": {
            "isExpanded": false,
            "scrollTop": 0
          },
          "maskInfo": {
            "isMaskVisible": true,
            "isEditorVisible": true,
            "isAutoplayActive": false
          }
        }
      }
    }
  ]
}